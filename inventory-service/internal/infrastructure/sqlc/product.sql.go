// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: product.sql

package sqlc

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createProduct = `-- name: CreateProduct :one
INSERT INTO products (
    id, sku, name, description, category, price, created_at, updated_at
) VALUES (
    $1, $2, $3, $4, $5, $6, $7, $8
)
RETURNING id, sku, name, description, category, price, created_at, updated_at
`

type CreateProductParams struct {
	ID          uuid.UUID      `json:"id"`
	Sku         string         `json:"sku"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
	Category    string         `json:"category"`
	Price       string         `json:"price"`
	CreatedAt   time.Time      `json:"created_at"`
	UpdatedAt   time.Time      `json:"updated_at"`
}

func (q *Queries) CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error) {
	row := q.queryRow(ctx, q.createProductStmt, createProduct,
		arg.ID,
		arg.Sku,
		arg.Name,
		arg.Description,
		arg.Category,
		arg.Price,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Sku,
		&i.Name,
		&i.Description,
		&i.Category,
		&i.Price,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
